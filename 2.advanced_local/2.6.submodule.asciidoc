
Submodules are a useful concept, and often seen in real projects.

Sometimes you want to 'include' one repository in another, but not simply copy
it over. Submodules allow you to manage the separate codebase with your
repository without changing the other repository.

Let's look at a concrete example.

Let's say Alice maintains a library:

----
mkdir alicelib
cd alicelib
git init
echo 'A' > file1
git add file1
git commit -am 'A'
# Branch to experimental
git checkout -b experimental
echo 'EXPERIMENTAL' >> file1
git commit -am EXPERIMENTAL
git checkout master
echo 'B' >> file1
git commit -am 'B'
----

Alice's library's history looks like this:

A
|\
| EXPERIMENTAL (experimental)
|
B (master)


Now Bob wants to use Alice's library, but specifically wants to use what's on
the experimental branch. 

TODO
